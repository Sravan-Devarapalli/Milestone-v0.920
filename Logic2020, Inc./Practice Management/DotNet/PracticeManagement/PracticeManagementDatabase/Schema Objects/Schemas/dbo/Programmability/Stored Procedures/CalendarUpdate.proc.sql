-- =============================================
-- Author:		Anatoliy Lokshin
-- Create date: 6-5-2008
-- Updated by:	Anatoliy Lokshin
-- Update date:	8-12-2008
-- Description:	Updates a calendar item
-- =============================================
CREATE PROCEDURE [dbo].[CalendarUpdate]
(
	@Date       DATETIME,
	@DayOff     BIT,
	@PersonId   INT,
	@UserLogin	NVARCHAR(255)
)
AS
	SET NOCOUNT ON
	
	DECLARE @Today DATETIME
	SELECT @Today = dbo.GettingPMTime(GETDATE())
	
	IF @PersonId IS NULL
	BEGIN
		-- Update the company calendar
		UPDATE dbo.Calendar
		   SET DayOff = @DayOff
		 WHERE Date = @Date
		
		IF @Date >= @Today
		BEGIN 
			IF @DayOff = 0
			BEGIN
				DELETE TE
				FROM TimeEntries TE
				JOIN CompanyRecurringHolidaysByPeriod(@Date,@Date) crh ON crh.Date = TE.MilestoneDate
				WHERE crh.IsSet = 1 
					AND TE.IsAutoGenerated = 1
			END
			ELSE
			BEGIN
				DECLARE @CurrentPMTime DATETIME,
						 @DefaultMilestoneId INT,
						 @ModifiedBy INT,
						 @HolidayTimeTypeId INT
				
				SET @CurrentPMTime = dbo.InsertingTime()
				SELECT @DefaultMilestoneId = MilestoneId FROM DefaultMilestoneSetting
				SELECT @ModifiedBy = PersonId FROM Person WHERE Alias = @UserLogin
				SET @HolidayTimeTypeId = dbo.GetHolidayTimeTypeId()
				
				--If MilestonePersonId is not there for the Person in DefaultMilestone
				INSERT INTO MilestonePerson(PersonId,MilestoneId)
				SELECT Distinct P.PersonId, @DefaultMilestoneId AS [MilestoneId]
				FROM Person P
				LEFT JOIN MilestonePerson mp ON mp.MilestoneId = @DefaultMilestoneId AND P.PersonId = mp.PersonId
				JOIN Pay pay ON pay.Person = p.PersonId
				JOIN CompanyRecurringHolidaysByPeriod(@Date, @Date) as rhd ON rhd.IsSet = 1 AND rhd.Date BETWEEN pay.StartDate AND ISNULL(pay.EndDate, dbo.GetFutureDate())- 1
				WHERE pay.Timescale = 2 
						AND ISNULL(P.TerminationDate, dbo.GetFutureDate()) >= @Today 
						AND  mp.MilestonePersonId IS NULL	
						
				-- if any new MilestonePersons inserted then we need to create MilestonePersonEntry for the new milestonePersonIds
				INSERT INTO MilestonePersonEntry(MilestonePersonId, StartDate, EndDate, Amount, HoursPerDay)
				SELECT Distinct mp.MilestonePersonId, m.StartDate, m.ProjectedDeliveryDate, 0, 8
				FROM MilestonePerson mp
				LEFT JOIN MilestonePersonEntry mpe on mpe.MilestonePersonId = mp.MilestonePersonId
				JOIN Pay p ON p.Person = mp.PersonId
				JOIN CompanyRecurringHolidaysByPeriod(@Date, @Date) rhd ON rhd.IsSet = 1 AND rhd.Date BETWEEN p.StartDate AND p.EndDate
				JOIN Milestone m ON m.MilestoneId = mp.MilestoneId
				WHERE mp.MilestoneId = @DefaultMilestoneId AND p.Timescale = 2 AND mpe.MilestonePersonId IS NULL
				
				INSERT  INTO [dbo].[TimeEntries]
								( [EntryDate] ,
								  [MilestoneDate] ,
								  [ModifiedDate] ,
								  [MilestonePersonId] ,
								  [ActualHours] ,
								  [ForecastedHours] ,
								  [TimeTypeId] ,
								  [ModifiedBy] ,
								  [Note] ,
								  [IsChargeable] ,
								  [IsCorrect],
								  [IsAutoGenerated]
								)
				SELECT @CurrentPMTime
						,rhd.[Date]
						,@CurrentPMTime
						,mp.MilestonePersonId
						,8
						,mpe.HoursPerDay
						,@HolidayTimeTypeId
						,@ModifiedBy
						,rhd.[Description]
						,m.IsChargeable
						,0
						,1 --Here it is Auto generated.
				FROM MilestonePerson mp 
				JOIN MilestonePersonEntry mpe ON mp.MilestonePersonId = mpe.MilestonePersonId
				JOIN Milestone m ON m.MilestoneId = mp.MilestoneId
				JOIN Pay pay ON pay.Person = mp.PersonId  AND pay.Timescale = 2
				JOIN Person p ON p.PersonId = pay.Person
				JOIN CompanyRecurringHolidaysByPeriod(@Date, @Date) rhd ON rhd.IsSet = 1 AND rhd.Date BETWEEN pay.StartDate AND (CASE WHEN p.TerminationDate IS NOT NULL AND pay.EndDate - 1 > p.TerminationDate THEN p.TerminationDate
																																	ELSE pay.EndDate - 1
																																	END)
				LEFT JOIN TimeEntries te ON te.MilestonePersonId = mpe.MilestonePersonId AND te.MilestoneDate = rhd.Date
				WHERE  mp.MilestoneId = @DefaultMilestoneId AND te.MilestoneDate IS NULL
			END			
		END
	END
	ELSE IF EXISTS (SELECT 1
	                  FROM dbo.Calendar AS cal
	                 WHERE cal.Date = @Date AND cal.DayOff = @DayOff)
	BEGIN
		-- Clear the person record
		DELETE
		  FROM dbo.PersonCalendar
		 WHERE Date = @Date AND PersonId = @PersonId
	END
	ELSE IF EXISTS (SELECT 1
	                  FROM dbo.PersonCalendar AS pcal
	                 WHERE pcal.Date = @Date AND pcal.PersonId = @PersonId)
	BEGIN
		-- Update an existing person record
		UPDATE dbo.PersonCalendar
		   SET DayOff = @DayOff
		 WHERE Date = @Date AND PersonId = @PersonId
	END
	ELSE
	BEGIN
		-- A person record does not exist - create it
		INSERT INTO dbo.PersonCalendar
		            (Date, PersonId, DayOff)
		     VALUES (@Date, @PersonId, @DayOff)
	END

	UPDATE ca
	   SET DayOff = pc.DayOff
	  FROM dbo.PersonCalendarAuto AS ca
	       INNER JOIN dbo.v_PersonCalendar AS pc ON ca.date = pc.Date AND ca.PersonId = pc.PersonId
	 WHERE ca.Date = @Date
	   AND (@PersonId IS NULL OR ca.PersonId = @PersonId)

