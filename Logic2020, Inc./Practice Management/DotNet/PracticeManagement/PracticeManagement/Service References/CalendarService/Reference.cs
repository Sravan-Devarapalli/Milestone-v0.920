//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PraticeManagement.CalendarService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalendarService.ICalendarService")]
    public interface ICalendarService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetCalendar", ReplyAction="http://tempuri.org/ICalendarService/GetCalendarResponse")]
        DataTransferObjects.CalendarItem[] GetCalendar(System.DateTime startDate, System.DateTime endDate, System.Nullable<int> personId, System.Nullable<int> practiceManagerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/SaveCalendar", ReplyAction="http://tempuri.org/ICalendarService/SaveCalendarResponse")]
        void SaveCalendar(DataTransferObjects.CalendarItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetCompanyHolidays", ReplyAction="http://tempuri.org/ICalendarService/GetCompanyHolidaysResponse")]
        int GetCompanyHolidays(int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetRecurringHolidaysList", ReplyAction="http://tempuri.org/ICalendarService/GetRecurringHolidaysListResponse")]
        DataTransferObjects.Triple<int, string, bool>[] GetRecurringHolidaysList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/SetRecurringHoliday", ReplyAction="http://tempuri.org/ICalendarService/SetRecurringHolidayResponse")]
        void SetRecurringHoliday(int recurringHolidayId, bool isSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetRecurringHolidaysInWeek", ReplyAction="http://tempuri.org/ICalendarService/GetRecurringHolidaysInWeekResponse")]
        System.Collections.Generic.Dictionary<System.DateTime, string> GetRecurringHolidaysInWeek(System.DateTime date, int personId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalendarServiceChannel : PraticeManagement.CalendarService.ICalendarService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalendarServiceClient : System.ServiceModel.ClientBase<PraticeManagement.CalendarService.ICalendarService>, PraticeManagement.CalendarService.ICalendarService {
        
        public CalendarServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalendarServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalendarServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalendarServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DataTransferObjects.CalendarItem[] GetCalendar(System.DateTime startDate, System.DateTime endDate, System.Nullable<int> personId, System.Nullable<int> practiceManagerId) {
            return base.Channel.GetCalendar(startDate, endDate, personId, practiceManagerId);
        }
        
        public void SaveCalendar(DataTransferObjects.CalendarItem item) {
            base.Channel.SaveCalendar(item);
        }
        
        public int GetCompanyHolidays(int year) {
            return base.Channel.GetCompanyHolidays(year);
        }
        
        public DataTransferObjects.Triple<int, string, bool>[] GetRecurringHolidaysList() {
            return base.Channel.GetRecurringHolidaysList();
        }
        
        public void SetRecurringHoliday(int recurringHolidayId, bool isSet) {
            base.Channel.SetRecurringHoliday(recurringHolidayId, isSet);
        }
        
        public System.Collections.Generic.Dictionary<System.DateTime, string> GetRecurringHolidaysInWeek(System.DateTime date, int personId) {
            return base.Channel.GetRecurringHolidaysInWeek(date, personId);
        }
    }
}

