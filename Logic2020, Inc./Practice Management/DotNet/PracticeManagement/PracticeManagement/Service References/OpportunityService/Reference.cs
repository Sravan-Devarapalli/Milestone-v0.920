//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PraticeManagement.OpportunityService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OpportunityService.IOpportunityService")]
    public interface IOpportunityService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/OpportunityGetExcelSet", ReplyAction="http://tempuri.org/IOpportunityService/OpportunityGetExcelSetResponse")]
        System.Data.DataSet OpportunityGetExcelSet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/GetOpportunityTransitions", ReplyAction="http://tempuri.org/IOpportunityService/GetOpportunityTransitionsResponse")]
        DataTransferObjects.OpportunityTransition[] GetOpportunityTransitions(int opportunityId, DataTransferObjects.OpportunityTransitionStatusType statusType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/GetOpportunityTransitionsByPerson", ReplyAction="http://tempuri.org/IOpportunityService/GetOpportunityTransitionsByPersonResponse")]
        DataTransferObjects.OpportunityTransition[] GetOpportunityTransitionsByPerson(int personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/OpportunityTransitionInsert", ReplyAction="http://tempuri.org/IOpportunityService/OpportunityTransitionInsertResponse")]
        int OpportunityTransitionInsert(DataTransferObjects.OpportunityTransition transition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/OpportunityTransitionDelete", ReplyAction="http://tempuri.org/IOpportunityService/OpportunityTransitionDeleteResponse")]
        void OpportunityTransitionDelete(int transitionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/OpportunityListAll", ReplyAction="http://tempuri.org/IOpportunityService/OpportunityListAllResponse")]
        DataTransferObjects.Opportunity[] OpportunityListAll(DataTransferObjects.ContextObjects.OpportunityListContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/OpportunityListAllShort", ReplyAction="http://tempuri.org/IOpportunityService/OpportunityListAllShortResponse")]
        DataTransferObjects.Opportunity[] OpportunityListAllShort(DataTransferObjects.ContextObjects.OpportunityListContext context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/GetOpportunityPrioritiesListAll", ReplyAction="http://tempuri.org/IOpportunityService/GetOpportunityPrioritiesListAllResponse")]
        DataTransferObjects.OpportunityPriority[] GetOpportunityPrioritiesListAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/GetById", ReplyAction="http://tempuri.org/IOpportunityService/GetByIdResponse")]
        DataTransferObjects.Opportunity GetById(int opportunityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/OpportunitySave", ReplyAction="http://tempuri.org/IOpportunityService/OpportunitySaveResponse")]
        System.Nullable<int> OpportunitySave(DataTransferObjects.Opportunity opportunity, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/OpportunityStatusListAll", ReplyAction="http://tempuri.org/IOpportunityService/OpportunityStatusListAllResponse")]
        DataTransferObjects.OpportunityStatus[] OpportunityStatusListAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/OpportunityTransitionStatusListAll", ReplyAction="http://tempuri.org/IOpportunityService/OpportunityTransitionStatusListAllResponse" +
            "")]
        DataTransferObjects.OpportunityTransitionStatus[] OpportunityTransitionStatusListAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/OpportunityConvertToProject", ReplyAction="http://tempuri.org/IOpportunityService/OpportunityConvertToProjectResponse")]
        int OpportunityConvertToProject(int opportunityId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/GetOpportunityId", ReplyAction="http://tempuri.org/IOpportunityService/GetOpportunityIdResponse")]
        System.Nullable<int> GetOpportunityId(string opportunityNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/GetOpportunityPersons", ReplyAction="http://tempuri.org/IOpportunityService/GetOpportunityPersonsResponse")]
        DataTransferObjects.Person[] GetOpportunityPersons(int opportunityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/ConvertOpportunityToProject", ReplyAction="http://tempuri.org/IOpportunityService/ConvertOpportunityToProjectResponse")]
        int ConvertOpportunityToProject(int opportunityId, string userName, bool hasPersons);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/OpportunityPersonInsert", ReplyAction="http://tempuri.org/IOpportunityService/OpportunityPersonInsertResponse")]
        void OpportunityPersonInsert(int opportunityId, string personIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunityService/OpportunityPersonDelete", ReplyAction="http://tempuri.org/IOpportunityService/OpportunityPersonDeleteResponse")]
        void OpportunityPersonDelete(int opportunityId, string personIdList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOpportunityServiceChannel : PraticeManagement.OpportunityService.IOpportunityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OpportunityServiceClient : System.ServiceModel.ClientBase<PraticeManagement.OpportunityService.IOpportunityService>, PraticeManagement.OpportunityService.IOpportunityService {
       
        public OpportunityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OpportunityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OpportunityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OpportunityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet OpportunityGetExcelSet() {
            return base.Channel.OpportunityGetExcelSet();
        }
        
        public DataTransferObjects.OpportunityTransition[] GetOpportunityTransitions(int opportunityId, DataTransferObjects.OpportunityTransitionStatusType statusType) {
            return base.Channel.GetOpportunityTransitions(opportunityId, statusType);
        }
        
        public DataTransferObjects.OpportunityTransition[] GetOpportunityTransitionsByPerson(int personId) {
            return base.Channel.GetOpportunityTransitionsByPerson(personId);
        }
        
        public int OpportunityTransitionInsert(DataTransferObjects.OpportunityTransition transition) {
            return base.Channel.OpportunityTransitionInsert(transition);
        }
        
        public void OpportunityTransitionDelete(int transitionId) {
            base.Channel.OpportunityTransitionDelete(transitionId);
        }
        
        public DataTransferObjects.Opportunity[] OpportunityListAll(DataTransferObjects.ContextObjects.OpportunityListContext context) {
            return base.Channel.OpportunityListAll(context);
        }
        
        public DataTransferObjects.Opportunity[] OpportunityListAllShort(DataTransferObjects.ContextObjects.OpportunityListContext context) {
            return base.Channel.OpportunityListAllShort(context);
        }
        
        public DataTransferObjects.OpportunityPriority[] GetOpportunityPrioritiesListAll() {
            return base.Channel.GetOpportunityPrioritiesListAll();
        }
        
        public DataTransferObjects.Opportunity GetById(int opportunityId) {
            return base.Channel.GetById(opportunityId);
        }
        
        public System.Nullable<int> OpportunitySave(DataTransferObjects.Opportunity opportunity, string userName) {
            return base.Channel.OpportunitySave(opportunity, userName);
        }
        
        public DataTransferObjects.OpportunityStatus[] OpportunityStatusListAll() {
            return base.Channel.OpportunityStatusListAll();
        }
        
        public DataTransferObjects.OpportunityTransitionStatus[] OpportunityTransitionStatusListAll() {
            return base.Channel.OpportunityTransitionStatusListAll();
        }
        
        public int OpportunityConvertToProject(int opportunityId, string userName) {
            return base.Channel.OpportunityConvertToProject(opportunityId, userName);
        }
        
        public System.Nullable<int> GetOpportunityId(string opportunityNumber) {
            return base.Channel.GetOpportunityId(opportunityNumber);
        }
        
        public DataTransferObjects.Person[] GetOpportunityPersons(int opportunityId) {
            return base.Channel.GetOpportunityPersons(opportunityId);
        }
        
        public int ConvertOpportunityToProject(int opportunityId, string userName, bool hasPersons) {
            return base.Channel.ConvertOpportunityToProject(opportunityId, userName, hasPersons);
        }
        
        public void OpportunityPersonInsert(int opportunityId, string personIdList) {
            base.Channel.OpportunityPersonInsert(opportunityId, personIdList);
        }
        
        public void OpportunityPersonDelete(int opportunityId, string personIdList) {
            base.Channel.OpportunityPersonDelete(opportunityId, personIdList);
        }
    }
}

